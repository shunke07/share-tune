service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {

    match /users/{userID} {
      allow create: if isAuthenticated()
                    && isUserAuthenticated(userID)
                    && isUserValid(incomingData())
                    && isCreateUserValid(incomingData());

      function isUserValid(data) {
        return data.size() == 6
        && data.keys().hasAll(['displayName', 'profileText', 'siteUrl', 'image', 'createdAt', 'updatedAt'])
        && validString(data.displayName, 1, 20)
        && data.image.keys().hasAll(['id', 'url'])
        && data.createdAt is timestamp
        && data.updatedAt is timestamp;
      }
      function isCreateUserValid(data) {
        return data.profileText == null
        && data.siteUrl == null
        && data.image.id == null
        && data.image.url == null
        && data.createdAt == data.updatedAt;
      }
    }

    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }

    function isUserAuthenticated(userID) {
      return request.auth.uid == userID;
    }

    function incomingData() {
      return request.resource.data;
    }

    function validString(text, min, max) {
      return text is string && min <= text.size() && text.size() <= max;
    }
  }
}
